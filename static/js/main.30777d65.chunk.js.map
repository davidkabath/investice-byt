{"version":3,"sources":["Header.js","ErrorMessage.js","InputForm.js","ResultsTableBody.js","ResultsTableHeader.js","ResultsTableDescription.js","ResultsTable.js","ProspectTable.js","ProspectHeader.js","Results.js","App.js","index.js"],"names":["Header","Container","fluid","className","Component","ErrorMessage","props","Form","Control","Feedback","type","text","InputForm","useForm","mode","register","handleSubmit","formState","setValue","getValues","errors","clearErrors","mortgageEnabled","useDefaultInput","useDefaultFormInput","defaultInput","defaultFormInput","useState","mortgageValues","saveMortgageValues","showDisclaimer","setShowDisclaimer","integerPattern","decimalPattern","Alert","Link","href","onClick","variant","Heading","onSubmit","data","noValidate","Group","as","Row","Label","column","sm","Col","InputGroup","placeholder","propertyInvestment","name","ref","required","min","max","pattern","defaultValue","Append","Text","initialMaintenence","monthlyRent","monthlyExpenses","emptyMonths","maxLength","homeMaintenance","Check","inline","checked","onChange","event","target","mortgageValue","mortgagePeriod","mortgageInterest","toggleMortgage","disabled","readOnly","Button","isSubmitting","ResultsTableRow","row","rowData","map","item","index","key","bold","ResultsTableBody","rows","tableData","ResultsTableHeader","header","headerData","ResultsTableDescription","isValueDevelopmentIncluded","SummaryTable","tablesData","monthlyMortgagePayment","monthlyNetRevenue","descriptionsAndValues","description","value","descriptionsAndValuesOnlyMortgage","concat","ResultsTable","rentInvestmentPeriodTable","Table","responsive","bordered","striped","hover","investmentPeriod","ProspectTable","ProspectHeader","prospectOnSubmit","valueDevelopment","Results","dataLoaded","Object","keys","this","results","length","prospectDataLoaded","resultsProspect","tableRef","Accordion","activeKey","Card","Toggle","eventKey","Collapse","Body","App","state","formInputData","setState","resultsState","computeInvestmentResults","mortgage","computeMonthlyMortgagePayment","computeMonthlyNetRevenue","getRentInvestmentPeriodTable","roundResults","yearlyInterest","parseFloat","parseInt","undefined","table","investmentPeriodSet","Set","monthlyRentTop","push","yearlyRevenueInPercentageMortgage","computeYearlyProfitInPercentage","Number","toFixed","add","Math","ceil","yearlyRevenueInPercentage","Array","from","scrollToTable","window","scrollTo","current","offsetTop","React","createRef","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30777d65.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"header\">\r\n        <div className=\"header-part1\">Investiční nemovitost</div>\r\n        <div className=\"header-part2\">orientační kalkulačka</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = (props) => {\r\n  return (\r\n    <Form.Control.Feedback className=\"custom-control\" type=\"invalid\">\r\n      {props.text}\r\n    </Form.Control.Feedback>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Alert,\r\n  InputGroup,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst InputForm = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState,\r\n    setValue,\r\n    getValues,\r\n    errors,\r\n    clearErrors,\r\n  } = useForm({\r\n    mode: \"onSubmit\", //\"onBlur\", //onChange / onSubmit\r\n  });\r\n  const mortgageEnabled = props.mortgageEnabled;\r\n  const useDefaultInput = props.useDefaultFormInput;\r\n  const defaultInput = props.defaultFormInput;\r\n\r\n  const [mortgageValues, saveMortgageValues] = useState();\r\n  const [showDisclaimer, setShowDisclaimer] = useState(false);\r\n\r\n  const toggleMortgage = (event) => {\r\n    if (!event.target.checked) {\r\n      saveMortgageValues(\r\n        getValues([\"mortgageValue\", \"mortgagePeriod\", \"mortgageInterest\"])\r\n      );\r\n\r\n      clearErrors([\"mortgageValue\", \"mortgagePeriod\", \"mortgageInterest\"]);\r\n      setValue(\"mortgageValue\", \"\");\r\n      setValue(\"mortgagePeriod\", \"\");\r\n      setValue(\"mortgageInterest\", \"\");\r\n    } else {\r\n      setValue(\"mortgageValue\", mortgageValues.mortgageValue);\r\n      setValue(\"mortgagePeriod\", mortgageValues.mortgagePeriod);\r\n      setValue(\"mortgageInterest\", mortgageValues.mortgageInterest);\r\n    }\r\n    props.toggleMortgage(event);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    props.onSubmit(data);\r\n  };\r\n\r\n  const integerPattern = /^[0-9]*$/;\r\n  const decimalPattern = /^[0-9]*.?[0-9]*$/;\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid className=\"disclaimer-strip\">\r\n        <Alert.Link\r\n          className=\"text-reset linkClass\"\r\n          href=\"#\"\r\n          onClick={() => setShowDisclaimer(!showDisclaimer)}\r\n        >\r\n          {showDisclaimer ? \"Skrýt\" : \"Zobrazit\"} vysvětlivky a popis výpočtu\r\n        </Alert.Link>\r\n      </Container>\r\n      <Container className=\"inputs\">\r\n        <div className=\"row justify-content-center\">\r\n          {showDisclaimer ? (\r\n            <Alert variant=\"danger\" className=\"disclaimer-text\">\r\n              <Alert.Heading>Vysvětlivky</Alert.Heading>\r\n              Nemovitost\r\n              <ul>\r\n                <li>\r\n                  Vlastní investice (VI) - finance z vlastní kapsy. Součet\r\n                  vlastní investice a výše hypotéky odpovídá ceně nemovitosti.\r\n                </li>\r\n                <li>\r\n                  Počáteční investice (PI) - náklady na počáteční rekonstrukci\r\n                  nemovitosti. Např. rekonstrukce kuchyně, koupelny nebo nová\r\n                  podlaha.\r\n                </li>\r\n                <li>Měsíční nájem (MN) - nájemné požadované po nájemníkovi.</li>\r\n                <li>\r\n                  Měsíční výdaje v procentech k nájmu (MV) - měsíční výdaje na\r\n                  daň z nemovitosti, pojištění nemovitosti, apod.\r\n                </li>\r\n                <li>\r\n                  Počet měsíců v roce, kdy nebude nemovitost pronajata (PM) -\r\n                  výpadek příjmů z nájmu v případě, kdy zůstává nemovitost\r\n                  nepronajata. Např. při hledání nového nájemníka, apod.\r\n                </li>\r\n                <li>\r\n                  Fond na interní opravy (ročně) (FO) - finance na opravy\r\n                  nemovitosti během doby investice. Např. při rekonstrukci\r\n                  kuchyně či jiných nezbytných opravách.\r\n                </li>\r\n              </ul>\r\n              Hypotéka\r\n              <ul>\r\n                <li>\r\n                  Výše (VH) - výše hypotéky. Součet výše hypotéky a vlastní\r\n                  investice odpovídá ceně nemovitosti.\r\n                </li>\r\n                <li>Doba splácení v celých letech (DH) - délka hypotéky.</li>\r\n                <li>Úrok p.a. (UH) - roční úrok hypotéky.</li>\r\n              </ul>\r\n              Výhled\r\n              <ul>\r\n                <li>\r\n                  Nárust/pokles hodnoty nemovitosti za dobu investice v\r\n                  procentech (HN) - úprava výpočtu výnosu investice o\r\n                  spekulativní nárust či pokles hodnoty nemovitosti za dobu\r\n                  investice.\r\n                </li>\r\n              </ul>\r\n              <Alert.Heading>Popis výpočtu</Alert.Heading>\r\n              <ul>\r\n                <li>\r\n                  Čistý měsíční příjem z nájmu (CM) = (MN x (12 - PM) - FO - MN\r\n                  x (12 - PM) x MV - (MN x (12 - PM) - MN x (12 - PM) x MV - FO\r\n                  - 24840) x 0.15) / 12; (0.15 = 15% = daň z příjmu; 12 = počet\r\n                  měsíců v roce; 24840 Kč = sleva na dani na poplatníka (2020)).\r\n                </li>\r\n                <li>\r\n                  Měsíční splátka hypotéky (MH) = VH x (1 + UH/12){\" \"}\r\n                  <sup>DH x 12</sup> x ((UH/12) / ((1 + UH/12){\" \"}\r\n                  <sup>DH x 12</sup> - 1)); (12 = počet měsíců v roce).\r\n                </li>\r\n                <li>\r\n                  Měsíční doplatek na hypotéku = Měsíční splátka hypotéky -\r\n                  Čistý měsíční příjem z nájmu.\r\n                </li>\r\n                <li>\r\n                  Čistý výnos investice p.a. = ((CM x 12 x DI + (VH + VI) - MH x\r\n                  12 x DH - PI - VI) / (MH x 12 x DH + PI + VI) / DI) x 100; (12\r\n                  = počet měsíců v roce; DI = délka investice v letech)\r\n                </li>\r\n                <li>\r\n                  Čistý výnos investice p.a. se započtením nárustu/poklesu\r\n                  hodnoty investice = ((CM x 12 x DI + (VH + VI) x (1 + HN) - MH\r\n                  x 12 x DH - PI - VI) / (MH x 12 x DH + PI + VI) / DI) x 100;\r\n                  (12 = počet měsíců v roce; DI = délka investice v letech)\r\n                </li>\r\n              </ul>\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          ;\r\n          <Form className=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <div className=\"inputForm-header\">\r\n              <h4>Nemovitost</h4>\r\n            </div>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Vlastní investice\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={defaultInput.propertyInvestment}\r\n                    name=\"propertyInvestment\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: 100000,\r\n                      max: 20000000,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.propertyInvestment : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>Kč</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.propertyInvestment ? (\r\n                    <ErrorMessage text=\"100 000 - 20 000 000 Kč\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Počáteční investice\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={defaultInput.initialMaintenence}\r\n                    name=\"initialMaintenence\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: 0,\r\n                      max: 2000000,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.initialMaintenence : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>Kč</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.initialMaintenence ? (\r\n                    <ErrorMessage text=\"0 - 2 000 000 Kč\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Měsíční nájem\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={defaultInput.monthlyRent}\r\n                    name=\"monthlyRent\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: 1000,\r\n                      max: 100000,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.monthlyRent : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>Kč</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.monthlyRent ? (\r\n                    <ErrorMessage text=\"1000 - 100 000 Kč\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Měsíční výdaje v procentech k nájmu\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={defaultInput.monthlyExpenses}\r\n                    name=\"monthlyExpenses\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: 0,\r\n                      max: 30,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.monthlyExpenses : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.monthlyExpenses ? (\r\n                    <ErrorMessage text=\"0 - 30 %\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Počet měsíců v roce, kdy nebude nemovitost pronajata\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder={defaultInput.emptyMonths}\r\n                  name=\"emptyMonths\"\r\n                  ref={register({\r\n                    required: true,\r\n                    min: 0,\r\n                    max: 6,\r\n                    maxLength: 4,\r\n                    pattern: decimalPattern,\r\n                  })}\r\n                  defaultValue={useDefaultInput ? defaultInput.emptyMonths : \"\"}\r\n                />\r\n                {errors.emptyMonths ? <ErrorMessage text=\"0.00 - 6.00\" /> : \"\"}\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Fond na interní opravy (ročně)\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={defaultInput.homeMaintenance}\r\n                    name=\"homeMaintenance\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: 0,\r\n                      max: 50000,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.homeMaintenance : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>Kč</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.homeMaintenance ? (\r\n                    <ErrorMessage text=\"0 - 50 000 Kč\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n            <div className=\"inputForm-header\">\r\n              <h4>\r\n                Hypotéka{\" \"}\r\n                <Form.Check\r\n                  inline\r\n                  type=\"checkbox\"\r\n                  name=\"mortgage\"\r\n                  checked={mortgageEnabled}\r\n                  ref={register}\r\n                  onChange={toggleMortgage}\r\n                />\r\n              </h4>\r\n            </div>\r\n\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Výše\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={\r\n                      mortgageEnabled ? defaultInput.mortgageValue : \"\"\r\n                    }\r\n                    name=\"mortgageValue\"\r\n                    ref={register({\r\n                      required: mortgageEnabled,\r\n                      min: 100000,\r\n                      max: 20000000,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    disabled={!mortgageEnabled}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.mortgageValue : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>Kč</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.mortgageValue && mortgageEnabled ? (\r\n                    <ErrorMessage text=\"100 000 - 20 000 000 Kč\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Doba splácení v celých letech\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder={\r\n                    mortgageEnabled ? defaultInput.mortgagePeriod : \"\"\r\n                  }\r\n                  name=\"mortgagePeriod\"\r\n                  ref={register({\r\n                    required: mortgageEnabled,\r\n                    min: 2,\r\n                    max: 35,\r\n                    pattern: integerPattern,\r\n                  })}\r\n                  readOnly={!mortgageEnabled}\r\n                  disabled={!mortgageEnabled}\r\n                  defaultValue={\r\n                    useDefaultInput ? defaultInput.mortgagePeriod : \"\"\r\n                  }\r\n                />\r\n                {errors.mortgagePeriod && mortgageEnabled ? (\r\n                  <ErrorMessage text=\"2 - 35 let\" />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Úrok p.a.\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder={\r\n                      mortgageEnabled ? defaultInput.mortgageInterest : \"\"\r\n                    }\r\n                    name=\"mortgageInterest\"\r\n                    ref={register({\r\n                      required: mortgageEnabled,\r\n                      min: 0.1,\r\n                      max: 10,\r\n                      maxLength: 4,\r\n                      pattern: decimalPattern,\r\n                    })}\r\n                    readOnly={!mortgageEnabled}\r\n                    disabled={!mortgageEnabled}\r\n                    defaultValue={\r\n                      useDefaultInput ? defaultInput.mortgageInterest : \"\"\r\n                    }\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.mortgageInterest && mortgageEnabled ? (\r\n                    <ErrorMessage text=\"0.10 - 10.00 %\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <div className=\"button-send\">\r\n              <Button\r\n                variant=\"info\"\r\n                type=\"submit\"\r\n                disabled={formState.isSubmitting}\r\n              >\r\n                Vypočítat\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\n\r\nconst ResultsTableRow = (props) => {\r\n  const row = props.rowData.map((item, index) => {\r\n    return (\r\n      <td\r\n        key={index}\r\n        className={\"align-middle \" + (index === 0 ? \"table-cell-bold\" : \"\")}\r\n      >\r\n        {item}%\r\n      </td>\r\n    );\r\n  });\r\n  return (\r\n    <tr\r\n      key={props.monthlyRent}\r\n      className={\"table-cell-center \" + (props.bold ? \" table-cell-bold\" : \"\")}\r\n    >\r\n      <td className={\"table-cell-center align-middle\"}>\r\n        {props.monthlyRent}&nbsp;Kč\r\n      </td>\r\n      {row}\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst ResultsTableBody = (props) => {\r\n  const rows = props.tableData.map((row, index) => {\r\n    return (\r\n      <ResultsTableRow\r\n        key={props.monthlyRent[index]}\r\n        rowData={row}\r\n        monthlyRent={props.monthlyRent[index]}\r\n        bold={index === 2 ? true : false}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>;\r\n};\r\n\r\nexport default ResultsTableBody;\r\n","import React from \"react\";\r\n\r\nconst ResultsTableHeader = (props) => {\r\n  const header = props.headerData.map((row, index) => {\r\n    return <th key={index}>{row}</th>;\r\n  });\r\n\r\n  return (\r\n    <thead>\r\n      <tr className=\"table-cell-center align-middle table-cell-bold\">\r\n        <th />\r\n        {header}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default ResultsTableHeader;\r\n","import React from \"react\";\r\nimport { CaretDownFill, CaretRightFill } from \"react-bootstrap-icons\";\r\n\r\nconst ResultsTableDescription = (props) => {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <b>Čistý výnos investice p.a.:</b>\r\n          {props.isValueDevelopmentIncluded\r\n            ? \" (se započtením změny hodnoty investice)\"\r\n            : \"\"}\r\n\r\n          <br />\r\n          <div className=\"d-none d-sm-block\">\r\n            Měsíční nájem {<CaretDownFill className=\"align-text-middle\" />} /\r\n            Délka investice v letech{\" \"}\r\n            {<CaretRightFill className=\"align-text-middle\" />}\r\n          </div>\r\n          <div className=\"d-sm-none d-block\">\r\n            Délka investice v letech{\" \"}\r\n            {<CaretRightFill className=\"align-text-middle\" />}\r\n            <br /> Měsíční nájem{\" \"}\r\n            {<CaretDownFill className=\"align-text-middle\" />}\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ResultsTableDescription;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport ResultsTableBody from \"./ResultsTableBody\";\r\nimport ResultsTableHeader from \"./ResultsTableHeader\";\r\nimport ResultsTableDescription from \"./ResultsTableDescription\";\r\n\r\nconst SummaryTable = (props) => {\r\n  const {\r\n    monthlyMortgagePayment,\r\n    monthlyNetRevenue,\r\n    mortgagePeriod,\r\n  } = props.tablesData;\r\n  const mortgageRevenueDelta = monthlyMortgagePayment - monthlyNetRevenue;\r\n\r\n  let descriptionsAndValues = [\r\n    {\r\n      description: \"Čistý měsíční příjem z nájmu: \",\r\n      value: monthlyNetRevenue + \" Kč\",\r\n    },\r\n  ];\r\n\r\n  const descriptionsAndValuesOnlyMortgage = [\r\n    {\r\n      description: \"Měsíční splátka hypotéky: \",\r\n      value: monthlyMortgagePayment + \" Kč po dobu \" + mortgagePeriod + \" let\",\r\n    },\r\n    {\r\n      description: \"Měsíční doplatek na hypotéku: \",\r\n      value: mortgageRevenueDelta + \" Kč po dobu \" + mortgagePeriod + \" let\",\r\n    },\r\n  ];\r\n\r\n  if (mortgagePeriod !== 0) {\r\n    descriptionsAndValues = descriptionsAndValues.concat(\r\n      descriptionsAndValuesOnlyMortgage\r\n    );\r\n  }\r\n\r\n  const rows = descriptionsAndValues.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td className=\"align-middle\">{row.description}</td>\r\n        <td className=\"align-middle\">{row.value}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>;\r\n};\r\n\r\nconst ResultsTable = (props) => {\r\n  const { rentInvestmentPeriodTable } = props.tablesData;\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <SummaryTable tablesData={props.tablesData} />\r\n      </Table>\r\n      <Table responsive className=\"resultsTableDescription\">\r\n        <ResultsTableDescription isValueDevelopmentIncluded={false} />\r\n      </Table>\r\n      <Table bordered striped hover responsive>\r\n        <ResultsTableHeader\r\n          headerData={rentInvestmentPeriodTable.investmentPeriod}\r\n        />\r\n        <ResultsTableBody\r\n          tableData={rentInvestmentPeriodTable.data}\r\n          monthlyRent={rentInvestmentPeriodTable.monthlyRent}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsTable;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport ResultsTableHeader from \"./ResultsTableHeader\";\r\nimport ResultsTableBody from \"./ResultsTableBody\";\r\nimport ResultsTableDescription from \"./ResultsTableDescription\";\r\n\r\nconst ProspectTable = (props) => {\r\n  const { rentInvestmentPeriodTable } = props.tablesData;\r\n\r\n  return (\r\n    <div>\r\n      <Table responsive className=\"resultsTableDescription\">\r\n        <ResultsTableDescription isValueDevelopmentIncluded={true} />\r\n      </Table>\r\n      <Table bordered striped hover responsive>\r\n        <ResultsTableHeader\r\n          headerData={rentInvestmentPeriodTable.investmentPeriod}\r\n        />\r\n        <ResultsTableBody\r\n          tableData={rentInvestmentPeriodTable.data}\r\n          monthlyRent={rentInvestmentPeriodTable.monthlyRent}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProspectTable;\r\n","import React from \"react\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputGroup, Container, Form, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst ProspectHeader = (props) => {\r\n  const { register, handleSubmit, formState, errors } = useForm({\r\n    mode: \"onSubmit\", //\"onBlur\", //onChange / onSubmit\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    props.prospectOnSubmit(data.valueDevelopment / 100);\r\n  };\r\n\r\n  const integerPattern = /^-?[0-9]+$/;\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"inputs\">\r\n        <div className=\"row justify-content-center\">\r\n          <Form className=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={8}>\r\n                Nárust/pokles hodnoty nemovitosti za dobu investice v procentech\r\n              </Form.Label>\r\n              <Col sm={4}>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    name=\"valueDevelopment\"\r\n                    ref={register({\r\n                      required: true,\r\n                      min: -100,\r\n                      max: 100,\r\n                      pattern: integerPattern,\r\n                    })}\r\n                    defaultValue=\"\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <InputGroup.Text>%</InputGroup.Text>\r\n                  </InputGroup.Append>\r\n                  {errors.valueDevelopment ? (\r\n                    <ErrorMessage text=\"-100 - 100 %\" />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </InputGroup>\r\n              </Col>\r\n            </Form.Group>\r\n\r\n            <div className=\"button-send\">\r\n              <Button\r\n                variant=\"info\"\r\n                type=\"submit\"\r\n                disabled={formState.isSubmitting}\r\n              >\r\n                Vypočítat výhled\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProspectHeader;\r\n","import React, { Component } from \"react\";\r\nimport { Accordion, Card, Container } from \"react-bootstrap\";\r\nimport ResultsTable from \"./ResultsTable\";\r\nimport ProspectTable from \"./ProspectTable\";\r\nimport ProspectHeader from \"./ProspectHeader\";\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    const dataLoaded = Object.keys(this.props.results).length !== 0;\r\n    const prospectDataLoaded =\r\n      Object.keys(this.props.resultsProspect).length !== 0;\r\n\r\n    return (\r\n      <Container className=\"results\" ref={this.tableRef}>\r\n        <div className=\"justify-content-center\">\r\n          <Accordion\r\n            className=\"resultsCard\"\r\n            activeKey={dataLoaded ? \"result\" : \"\"}\r\n          >\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"result\">\r\n                <b>Výsledek</b>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"result\">\r\n                <Card.Body>\r\n                  {dataLoaded ? (\r\n                    <ResultsTable tablesData={this.props.results} />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n\r\n          <Accordion\r\n            className=\"resultsCard\"\r\n            activeKey={dataLoaded ? \"prospect\" : \"\"}\r\n          >\r\n            <Card>\r\n              <Accordion.Toggle as={Card.Header} eventKey=\"prospect\">\r\n                <b>Výhled</b>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"prospect\">\r\n                <Card.Body>\r\n                  {dataLoaded ? (\r\n                    <div>\r\n                      <ProspectHeader\r\n                        prospectOnSubmit={this.props.prospectOnSubmit}\r\n                      />\r\n                      {prospectDataLoaded ? (\r\n                        <ProspectTable\r\n                          tablesData={this.props.resultsProspect}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\n\nimport InputForm from \"./InputForm\";\nimport Results from \"./Results\";\n\nimport \"./App.css\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.tableRef = React.createRef();\n  }\n\n  state = {\n    formInputData: {},\n    results: {},\n    resultsProspect: {},\n    mortgageEnabled: true,\n  };\n\n  //Use for debugging\n  useDefaultFormInput = false;\n\n  defaultFormInput = {\n    propertyInvestment: 600000,\n    initialMaintenence: 100000,\n    monthlyRent: 11000,\n    monthlyExpenses: 30,\n    emptyMonths: 1.0,\n    homeMaintenance: 5000,\n    mortgageValue: 2400000,\n    mortgagePeriod: 20,\n    mortgageInterest: 2.28,\n  };\n\n  toggleMortgage = (event) => {\n    this.setState({ mortgageEnabled: event.target.checked });\n  };\n\n  onSubmit = (formInputData) => {\n    const resultsState = this.computeInvestmentResults(formInputData);\n\n    this.setState({\n      formInputData: formInputData,\n      results: resultsState,\n      resultsProspect: {},\n    });\n\n    //setTimeout(this.scrollToTable, 500);\n  };\n\n  prospectOnSubmit = (valueDevelopment) => {\n    const resultsProspect = this.computeInvestmentResults(\n      this.state.formInputData,\n      valueDevelopment\n    );\n\n    this.setState({\n      resultsProspect: resultsProspect,\n    });\n  };\n\n  computeInvestmentResults = (formInputData, valueDevelopment) => {\n    const resultsState = {};\n\n    //if mortgage is disabled\n    if (!formInputData.mortgage) {\n      formInputData.mortgageValue = 0;\n      formInputData.mortgagePeriod = 0;\n      formInputData.mortgageInterest = 0;\n      resultsState.monthlyMortgagePayment = 0;\n    } else {\n      //compute mothly mortgage payment\n      resultsState.monthlyMortgagePayment = this.computeMonthlyMortgagePayment(\n        formInputData\n      );\n    }\n\n    //compute monthly net revenue\n    resultsState.monthlyNetRevenue = this.computeMonthlyNetRevenue(\n      formInputData\n    );\n\n    //create table based on a rent and a period of investment.\n    //mortgage period + x years <= 50 in total; 5 years period;\n    resultsState.rentInvestmentPeriodTable = this.getRentInvestmentPeriodTable(\n      formInputData,\n      resultsState.monthlyMortgagePayment,\n      valueDevelopment\n    );\n\n    resultsState.mortgagePeriod = formInputData.mortgagePeriod;\n\n    //round results\n    this.roundResults(resultsState);\n\n    return resultsState;\n  };\n\n  //compute mothly mortgage payment\n  computeMonthlyMortgagePayment = (formInputData) => {\n    const yearlyInterest =\n      parseFloat(formInputData.mortgageInterest) / 100 / 12;\n    const mortgagePeriod = parseInt(formInputData.mortgagePeriod, 10) * 12;\n    const mortgageValue = parseInt(formInputData.mortgageValue, 10);\n\n    const monthlyPayment =\n      mortgageValue *\n      (1 + yearlyInterest) ** mortgagePeriod *\n      (yearlyInterest / ((1 + yearlyInterest) ** mortgagePeriod - 1));\n    return monthlyPayment;\n  };\n\n  //compute monthly net revenue\n  computeMonthlyNetRevenue = (formInputData, monthlyRent) => {\n    if (monthlyRent === undefined) {\n      monthlyRent = parseInt(formInputData.monthlyRent, 10);\n    }\n    const emptyMonths = parseFloat(formInputData.emptyMonths, 10);\n    const homeMaintenance = parseInt(formInputData.homeMaintenance, 10);\n    const monthlyExpenses = parseInt(formInputData.monthlyExpenses, 10) / 100;\n\n    const computeMonthlyNetRevenue =\n      (monthlyRent * (12 - emptyMonths) -\n        homeMaintenance -\n        monthlyRent * (12 - emptyMonths) * monthlyExpenses -\n        (monthlyRent * (12 - emptyMonths) -\n          monthlyRent * (12 - emptyMonths) * monthlyExpenses -\n          homeMaintenance -\n          24840) *\n          0.15) /\n      12;\n\n    return computeMonthlyNetRevenue;\n  };\n\n  //monthlyRent -> + 500, 5 rows -> -1000, - 500, x (bold), +500, +1000\n  //investmentPeriod -> + 5 years, starting on the mortgagePeriod, max. 50 years mortgagePeriod inclusive.\n  getRentInvestmentPeriodTable = (\n    formInputData,\n    monthlyMortgagePayment,\n    valueDevelopment\n  ) => {\n    const mortgagePeriod = parseInt(formInputData.mortgagePeriod, 10);\n\n    const table = {\n      data: [],\n      monthlyRent: [],\n      investmentPeriod: [],\n    };\n    const investmentPeriodSet = new Set();\n    const monthlyRentTop = parseInt(formInputData.monthlyRent, 10) + 1000;\n    for (\n      let monthlyRent = parseInt(formInputData.monthlyRent, 10) - 1000;\n      monthlyRent <= monthlyRentTop;\n      monthlyRent += 500\n    ) {\n      const row = [];\n      table.monthlyRent.push(monthlyRent);\n      const monthlyNetRevenue = this.computeMonthlyNetRevenue(\n        formInputData,\n        monthlyRent\n      );\n\n      if (mortgagePeriod % 5 !== 0) {\n        const yearlyRevenueInPercentageMortgage = this.computeYearlyProfitInPercentage(\n          formInputData,\n          monthlyMortgagePayment,\n          monthlyNetRevenue,\n          undefined,\n          valueDevelopment\n        );\n        row.push(Number(yearlyRevenueInPercentageMortgage).toFixed(2));\n        investmentPeriodSet.add(mortgagePeriod);\n      }\n      for (\n        let investmentPeriod =\n          mortgagePeriod === 0 ? 5 : Math.ceil(mortgagePeriod / 5) * 5;\n        investmentPeriod <= 50;\n        investmentPeriod = investmentPeriod + 5\n      ) {\n        investmentPeriodSet.add(investmentPeriod);\n        const yearlyRevenueInPercentage = this.computeYearlyProfitInPercentage(\n          formInputData,\n          monthlyMortgagePayment,\n          monthlyNetRevenue,\n          investmentPeriod,\n          valueDevelopment\n        );\n\n        row.push(Number(yearlyRevenueInPercentage).toFixed(2));\n      }\n      table.data.push(row);\n    }\n    table.investmentPeriod = Array.from(investmentPeriodSet);\n\n    return table;\n  };\n\n  //compute yearly net revenue in percentage\n  computeYearlyProfitInPercentage = (\n    formInputData,\n    monthlyMortgagePayment,\n    monthlyNetRevenue,\n    investmentPeriod,\n    valueDevelopment\n  ) => {\n    if (investmentPeriod === undefined) {\n      investmentPeriod = formInputData.mortgagePeriod;\n    }\n    if (valueDevelopment === undefined) {\n      valueDevelopment = 0.0;\n    } else {\n      valueDevelopment = parseFloat(valueDevelopment, 10);\n    }\n\n    const initialMaintenence = parseInt(formInputData.initialMaintenence, 10);\n    const propertyInvestment = parseInt(formInputData.propertyInvestment, 10);\n    const mortgagePeriod = parseInt(formInputData.mortgagePeriod, 10);\n    const mortgageValue = parseInt(formInputData.mortgageValue, 10);\n\n    const yearlyProfitInPercentage =\n      ((monthlyNetRevenue * 12 * investmentPeriod +\n        (mortgageValue + propertyInvestment) * (1 + valueDevelopment) -\n        monthlyMortgagePayment * 12 * mortgagePeriod -\n        initialMaintenence -\n        propertyInvestment) /\n        (monthlyMortgagePayment * 12 * mortgagePeriod +\n          initialMaintenence +\n          propertyInvestment) /\n        investmentPeriod) *\n      100;\n\n    return yearlyProfitInPercentage;\n  };\n\n  roundResults = (resultsState) => {\n    resultsState.monthlyMortgagePayment = Number(\n      resultsState.monthlyMortgagePayment\n    ).toFixed();\n    resultsState.monthlyNetRevenue = Number(\n      resultsState.monthlyNetRevenue\n    ).toFixed();\n\n    return resultsState;\n  };\n\n  scrollToTable = () => window.scrollTo(0, this.tableRef.current.offsetTop);\n\n  render() {\n    const { results, mortgageEnabled, resultsProspect } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <InputForm\n          onSubmit={this.onSubmit}\n          toggleMortgage={this.toggleMortgage}\n          mortgageEnabled={mortgageEnabled}\n          defaultFormInput={this.defaultFormInput}\n          useDefaultFormInput={this.useDefaultFormInput}\n        />\n        <div ref={this.tableRef}>\n          <Results\n            prospectOnSubmit={this.prospectOnSubmit}\n            results={results}\n            resultsProspect={resultsProspect}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}